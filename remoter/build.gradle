
plugins {
  id 'java-library'
  id 'maven-publish'
  id 'signing'
  id 'kotlin'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
  implementation project(':remoter-annotations')
  implementation deps.auto.common
  api deps.javapoet


  compileOnly 'com.google.auto.service:auto-service:1.0-rc6'
  annotationProcessor 'com.google.auto.service:auto-service:1.0-rc6'


  compileOnly("net.ltgt.gradle.incap:incap:0.2")
  annotationProcessor("net.ltgt.gradle.incap:incap-processor:0.2")

  api 'com.squareup:kotlinpoet:1.17.0'

  compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
  compileOnly 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3'


}





version = VERSION_NAME
group = GROUP

java {
  withJavadocJar()
  withSourcesJar()
}


publishing {
  publications {
    mavenJava(MavenPublication) {
      artifactId = POM_ARTIFACT_ID
      from components.java
      versionMapping {
        usage('java-api') {
          fromResolutionOf('runtimeClasspath')
        }
        usage('java-runtime') {
          fromResolutionResult()
        }
      }
      pom {
        name = POM_NAME
        description = POM_DESCRIPTION
        url = POM_URL
        licenses {
          license {
            name = POM_LICENCE_NAME
            url = POM_LICENCE_URL
            distribution = POM_LICENCE_DIST
          }
        }
        developers {
          developer {
            id = POM_DEVELOPER_ID
            name = POM_DEVELOPER_NAME
          }
        }
        scm {
          url = POM_SCM_URL
          connection = POM_SCM_CONNECTION
          developerConnection = POM_SCM_DEV_CONNECTION
        }
      }
    }
  }
  repositories {
    maven {
      def releasesRepoUrl = getReleaseRepositoryUrl()
      def snapshotsRepoUrl = getSnapshotRepositoryUrl()
      url = isReleaseBuild() ? releasesRepoUrl : snapshotsRepoUrl
      credentials {
        username = getRepositoryUsername()
        password = getRepositoryPassword()
      }
    }
  }
}


signing {
  sign publishing.publications.mavenJava
}

def isReleaseBuild() {
  return VERSION_NAME.contains("SNAPSHOT") == false
}

def getReleaseRepositoryUrl() {
  return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
          : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
}

def getSnapshotRepositoryUrl() {
  return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
          : "https://oss.sonatype.org/content/repositories/snapshots/"
}

def getRepositoryUsername() {
  return hasProperty('SONATYPE_NEXUS_USERNAME') ? SONATYPE_NEXUS_USERNAME : ""
}

def getRepositoryPassword() {
  return hasProperty('SONATYPE_NEXUS_PASSWORD') ? SONATYPE_NEXUS_PASSWORD : ""
}
